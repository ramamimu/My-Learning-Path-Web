# BACKGROUND
background-color
background-image

background-repeat: repeat|repeat-x|repeat-y|no-repeat|initial|inherit;

background-position: left|right|top|bottom|center|x% y%|xpx ypx|;

background-attachment: scroll|fixed|local|initial|inherit;

background-size: auto|length|cover|contain|initial|inherit;

background-origin: padding-box|border-box|content-box|initial|inherit;

## Shorthand
    1. background-color
    2. background-image
    3. background-repeat
    4. background-attachment
    5. background-position

background: #ffffff url("img_tree.png") no-repeat right top;


# BORDER
## border style
p.dotted {border-style: dotted;}
p.dashed {border-style: dashed;}
p.solid {border-style: solid;}
p.double {border-style: double;}
p.groove {border-style: groove;}
p.ridge {border-style: ridge;}
p.inset {border-style: inset;}
p.outset {border-style: outset;}
p.none {border-style: none;}
p.hidden {border-style: hidden;}
p.mix {border-style: dotted dashed solid double;}

## border width
border-width: |px|thin|medium|thick|px px|px px px px|

## border color
border-color : is like as bakcground-color X border-width(color|color color|color 4x|)

## border individual set style
border-top-style: 
border-right-style: 
border-bottom-style: 
border-left-style: 

border-style : like as border-style X border-width

## Shorthand border
border-width
border-style (required)
border-color
border: 5px solid red;

## side border only
border-left|border-right|border-top|
border-bottom|: Shorthand;
note: usually combo with background-color

## border radius
border-radius: px;


# MARGIN
Margin - Individual Sides
CSS has properties for specifying the margin for each side of an element:

    margin-top
    margin-right
    margin-bottom
    margin-left
All the margin properties can have the following values:

    auto - the browser calculates the margin (usually to the center)

    length - specifies a margin in px, pt, cm, etc.

    % - specifies a margin in % of the width of the containing element

    inherit - specifies that the margin should be inherited from the parent element

    Tip: Negative values are allowed.

You can set the margin property to auto to horizontally center the element within its container.

# PADDING
setup like as margin

# WIDTH AND WEIGHT
CSS height and width Values
The height and width properties may have the following values:

    auto - This is default. The browser calculates the height and width

    length - Defines the height/width in px, cm etc.

    % - Defines the height/width in percent of the containing block

    initial - Sets the height/width to its default value

    inherit - The height/width will be inherited from its parent value

width can be set {max-width: px;}

# OUTLINE
An outline is a line that is drawn around elements, OUTSIDE the borders, to make the element "stand out".

CSS has the following outline properties:
    outline-style
    outline-color
    outline-width
    outline-offset
    outline

## Outline style
similar with border in format

## Outline width
format similar with border

## Outline Shorthand
format similar with border

## Outline Offset
batas luar outline: px

# TEXT
## Kayak arah huruf arab
  direction: rtl;
  unicode-bidi: bidi-override;

## Vertical Align
vertical-align: baseline|text-top|text-bottom|sub|super;

## Text Decoration
text-decoration : none|overline|line-through|underline;

## Text Transform
text-transform : uppercase|lowercase|capitalize;

## text-indent: px;

## letter-spacing: px; (jarak spasi antar huruf dalam satu kalimat)

## letter-height: px; (jarak spasi antar baris kalimat)

## word-spacing : px (jarak antar kata)

# text-shadow: 2px 2px 5px red;
(horizonral vertical blur color)


# FONTS
Generic Font Family	    Examples of Font Names
Serif	                Times New Roman
                        Georgia
                        Garamond
Sans-serif	            Arial
                        Verdana
                        Helvetica
Monospace	            Courier New
                        Lucida Console
                        Monaco
Cursive	                Brush Script MT
                        Lucida Handwriting
Fantasy	                Copperplate
                        Papyrus

## Font style
font-style: normal|italic|oblique;

## Font Weight
font-weight: normal|bold;

## Font Variant
font-variant: normal|small-caps;

## Font Size
font-size: px|em|vw;

## Google Fonts
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Audiowide|Sofia|Trirong">

<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Sofia&effect=fire">

<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Sofia&effect=neon|outline|emboss|shadow-multiple">

## The CSS Font Property
To shorten the code, it is also possible to specify all the individual font properties in one property.
The font property is a shorthand property for:

font-style
font-variant
font-weight
font-size/line-height
font-family

# ICON
wrap with <i> <span>


# Link
a:link - a normal, unvisited link
a:visited - a link the user has visited
a:hover - a link when the user mouses over it
a:active - a link the moment it is clicked

a.two:link {color:#ff0000;}

!! a:hover MUST come after a:link and a:visited
!! a:active MUST come after a:hover


# TYPE CURSOR
<p>Mouse over the words to change the cursor.</p>
<span style="cursor:auto">auto</span><br>
<span style="cursor:crosshair">crosshair</span><br>
<span style="cursor:default">default</span><br>
<span style="cursor:e-resize">e-resize</span><br>
<span style="cursor:help">help</span><br>
<span style="cursor:move">move</span><br>
<span style="cursor:n-resize">n-resize</span><br>
<span style="cursor:ne-resize">ne-resize</span><br>
<span style="cursor:nw-resize">nw-resize</span><br>
<span style="cursor:pointer">pointer</span><br>
<span style="cursor:progress">progress</span><br>
<span style="cursor:s-resize">s-resize</span><br>
<span style="cursor:se-resize">se-resize</span><br>
<span style="cursor:sw-resize">sw-resize</span><br>
<span style="cursor:text">text</span><br>
<span style="cursor:w-resize">w-resize</span><br>
<span style="cursor:wait">wait</span><br>


#List style
list-style-type: circle|square|upper-roman|lower-alpha;

## List Style Image
list-style-image: url(sqpurple.gif);
list-style: circle inside url('img_marker.png');


# TABLE
table, th, td{
    caption-side: top|bottom;
    padding: 15px;
    vertical-align: bottom;
    text-align: left;
    width: 100%;
    height: px;
    empty-cells: show|hide;

    border-collapse: separate|collapse|initial|inherit;
    or
    border-spacing: px;

    border: 1px solid black; || border-bottom: 1px solid #ddd;
    tr:hover {background-color: #f5f5f5;}
    table-layout: auto|fixed;
}

tr:nth-child(odd) {background-color: #f2f2f2;}      : efek berwarna selang-seling

## Responsive Table
<div style="overflow-x:auto;">
  <table>
  ...content...
  </table>
</div>

# Display
display: none|block|inline|inline-block|flex;
flex-direction: row|column|row-reverse|column-reverse
visibiility: none|hidden;

# POSITION
position: static|relative|fixed|absolute|sticky;

position: static; is not positioned in any special way; it is always positioned according to the normal flow of the page:

position: relative; is positioned relative to its normal position.
Setting the top, right, bottom, and left properties of a relatively-positioned element will cause it to be adjusted away from its normal position.(normal position[jarak terhadap posisi margin])

position: fixed; is positioned relative to the viewport, 
(kombo dengan posisi margin di viewport, nempel di layar)
which means it always stays in the same place even if the page is scrolled. The top, right, bottom, and left properties are used to position the element.

position: absolute; is positioned relative to the nearest positioned ancestor (instead of positioned relative to the viewport, like fixed).(jarak posisi sesungguhnya)(terhadap halaman html/element terdekat/margin terdekat/posisinya biasanya di dalam sesuatu lain)

z-index: -1|1;
z-index property specifies the stack order of an element (which element should be placed in front of, or behind, the others). An element can have a positive or negative (in behind) stack order. (posisi depan dan belakang text)

# OVERFLOW

The overflow property specifies whether to clip the content or to add scrollbars when the content of an element is too big to fit in the specified area.

The overflow property has the following values:

    * visible - Default. The overflow is not clipped. The content renders outside the element's box (default)
    * hidden - The overflow is clipped, and the rest of the content will be invisible
    * scroll - The overflow is clipped, and a scrollbar is added to see the rest of the content
    * auto - Similar to scroll, but it adds scrollbars only when necessary

overflow-x and overflow-y
The overflow-x and overflow-y properties specifies whether to change the overflow of content just horizontally or vertically (or both):

overflow-x specifies what to do with the left/right edges of the content.
overflow-y specifies what to do with the top/bottom edges of the content.


# FLOAT
float: none|left|right|inherit;
(bisa buat atur gambar berjejer)

the  following elemen is clear
clear: none|left|right|inherit;

clearfix pakai overflow: auto;
.clearfix::after {
  content: "";
  clear: both;
  display: table;
}
(ini cara aman)


# COMBINATOR
Selector	        Example	        Example description
element element	    div p	        Selects all <p> elements inside <div> elements
element>element	    div > p	        Selects all <p> elements where the parent is a <div> element
element+element	    div + p	        Selects the first <p> element that are placed immediately after <div> elements
element1~element2	p ~ ul	        Selects every <ul> element that are preceded by a <p> element


# PSEUDO CLASSES
selector:hover{}
selector:first-child{}


# PSEUDO ELEMENT
selector::first-letter{}
selector::first-line{}
selector::before{}
selector::before{}
selector::after{}
selector::selection{}                   (ketika text diblock)
selector::marker{}                      (use for ordered and unordered list)


# ATRIBUTE SELECTOR
[atribute]{}
[atribute="value"]{}
[atribute~=value]{}               : containing specifiec word
[attribute|="value"]{}              : specified attribute with specified attribute starting with the specified value.
[attribute^="value"]{}              :  selector is used to select elements whose attribute value begins with a specified value.
[attribute$="value"]{}              : selector is used to select elements whose attribute value ends with a specified value.
[attribute*="value"]{}              : selector is used to select elements whose attribute value contains a specified value.


# ROUNDED CORNERS (BORDER RADIUS)
border-radius: px|%;

# BORDER IMAGE
first must initiate with border as usual and then following this:
border-image: url() number round|stretch;
or
border-image-source: url(border.png);
border-image-slice: number|%|fill|initial|inherit;
border-image-width: number|%|auto|initial|inherit;
border-image-repeat: initial|stretch|repeat|round|inherit;

Value	        Description
number	        The number(s) represent pixels for raster images or coordinates for vector images	
%	            Percentages are relative to the height or width of the image	
fill	        Causes the middle part of the image to be displayed	
initial	        Sets this property to its default value. Read about initial	
inherit	        Inherits this property from its parent element. Read about inherit

border-image-outset: length|number|initial|inherit;


# MULTIPLE BACKGROUND
#example1 {
  background: url(img_flwr.gif) right bottom no-repeat, url(paper.gif) left top repeat;
}

#example1 {
  background-image: url(img_flwr.gif), url(paper.gif);
  background-position: right bottom, left top;
  background-repeat: no-repeat, repeat;
}

#example1 {
  background: url(img_tree.gif) left top no-repeat, url(img_flwr.gif) right bottom no-repeat, url(paper.gif) left top repeat;
  background-size: 50px, 130px, auto;
}

background-size: numberpx or and widthpx |cover|contain;
background-size: auto|length|cover|contain|initial|inherit;

## background clip
background-clip|background-origin: border-box|padding-box|content-box|initial|inherit; (background-clip is painting area of the background, background origin is starting area in background)


# LINEAR GRADIENT
#grad {
  background-image: linear-gradient|repeating-linear-gradient(to right, red,orange,yellow,green,blue,indigo,violet);
}
to right|to left|to top|to bottom|deg;      (0 top, 90 to right, 180 to bottom)
color|percent%color|rgba|hsla;


# RADIAL GRADIENT 
(as far, aturan penulisannya sama kek linear)
#grad1 {
  background-image: radial-gradient(closest-side at 60% 55%, red, yellow, black);
}

background-image: radial-gradient(shape size at position, start-color, ..., last-color);

- shape	
  ellipse (default)
  circle

- Size Keywords
  closest-side 
  farthest-side
  closest-corner
  farthest-corner


# SHADOW EFFECT
## text-shadow: horizontalpx verticalpx blurpx color;
its possible some of value;

## box-shadow is like text-shadow


# TEXT EFFECT

  text-overflow
  word-wrap
  word-break
  writing-mode

p.test1 {
  white-space: nowrap;
  width: 200px;
  border: 1px solid #000000;
  overflow: hidden;
  text-overflow: clip;
}

p.test2 {
  white-space: nowrap;
  width: 200px;
  border: 1px solid #000000;
  overflow: hidden;
  text-overflow: ellipsis;
}

  word-wrap: break-word;
  
p.test1 {
  word-break: keep-all;
}

p.test2 {
  word-break: break-all;
}

p.test1 {
  writing-mode: horizontal-tb;
}

span.test2 {
  writing-mode: vertical-rl;
}

p.test2 {
  writing-mode: vertical-rl;
}


# WEB FONTS
@font-face {
  font-family: myFirstFont;
  src: url(sansation_light.woff);
}

div {
  font-family: myFirstFont;
}

@font-face {
  font-family: sansation;
  src: url(sansation_light.woff);
}

@font-face {
  font-family: sansation;
  src: url(sansation_bold.woff);
  font-weight: bold;

}


# CSS 2D Transforms Methods
With the CSS transform property you can use the following 2D transformation methods:

translate(px,px)     
rotate(deg)        
scaleX()        
scaleY()        
scale(times,times)         
skewX(deg)                    (membelah ketupat)
skewY(deg)                    ((membelah ketupat)
skew()
matrix()

transform: methods;

 matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY());


# CSS 3D Transforms Methods
With the CSS transform property you can use the following 3D transformation methods:

rotateX()       deg
rotateY()
rotateZ()


# TRANSITION

transition
transition-delay
transition-duration
transition-property
transition-timing-function

transition: width 2s, height 4s;

#div1 {transition-timing-function: linear;}
#div2 {transition-timing-function: ease;}
#div3 {transition-timing-function: ease-in;}
#div4 {transition-timing-function: ease-out;}
#div5 {transition-timing-function: ease-in-out;}

transition-delay: 1s
  
(TRANSITION AND TRANSFORM)
  div {
  width: 100px;
  height: 100px;
  background: red;
  transition: width 2s, height 2s, transform 2s;
}

div:hover {
  width: 300px;
  height: 300px;
  transform: rotate(180deg);
}
////////////////////////////////


transition: width 2s ease-in-out 0.5s;
"2" second duration, "ease-in-out" speed curve, and a "0.5" second delay before starting.


# ANIMATION
div {
  animation-name: example;
  animation-duration: 5s;
  animation-timing-function: linear;
  animation-delay: 2s;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}

@keyframes example {
  0%   {background-color:red; left:0px; top:0px;}
  25%  {background-color:yellow; left:200px; top:0px;}
  50%  {background-color:blue; left:200px; top:200px;}
  75%  {background-color:green; left:0px; top:200px;}
  100% {background-color:red; left:0px; top:0px;}
}

SHORTHAND
  animation: example 5s linear 2s infinite alternate;


////////
  animation-duration: s;

  animation-delay:  s; (posible to negative)

  animation-iteration-count: number|infinite;

  animation-direction: normal|reverse|alternate|  alternate-reverse;            (putar-balik atau lurus terus)
  ///////////////////////
  normal - The animation is played as normal (forwards). This is default
  reverse - The animation is played in reverse direction (backwards)
  alternate - The animation is played forwards first, then backwards
  alternate-reverse - The animation is played backwards first, then forwards
  ///////////////////////
  
  animation-timing-function: ease|linear|ease-in|ease-out|ease-in-out|cubic-bezier(n,n,n,n);  (pelan awal atau akhir)
  
  animation-fill-mode: none|forwards|backwards|both;




ADDDDDDDDDDDDDDDDDDDDDDDDD      :D

# IMAGE

object-fit: fill|contain|cover|none|scale-down;

  fill - This is default. The image is resized to fill the given dimension. If necessary, the image will be stretched or squished to fit
  contain - The image keeps its aspect ratio, but is resized to fit within the given dimension
  cover - The image keeps its aspect ratio and fills the given dimension. The image will be clipped to fit
  none - The image is not resized
  scale-down - the image is scaled down to the smallest version of none or contain

